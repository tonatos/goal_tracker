version: '3.8'

services:
  db:
    image: postgres:15.1-alpine
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.0.8-alpine
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  static:
    image: caddy:2.6.4-alpine
    command: 'caddy file-server'
    volumes:
      - static:/srv/static
      - public:/srv/public
      - caddy_data:/data
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static.rule=PathPrefix(`/public/` || PathPrefix(`/static/`)"

  api:
    build:
      context: ./
      dockerfile: ./build/Dockerfile.back
      args:
        - API_PORT=${API_PORT}
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
    depends_on:
      - db
      - redis
    volumes:
      - public:/app/public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api/v1/`)"

  front:
    build:
      context: ./
      dockerfile: ./build/Dockerfile.front
      args:
        - NODE_VERSION=16
        - REACT_APP_API_URL=${REACT_APP_API_URL}
        - FRONT_PORT=${FRONT_PORT}
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - api
    volumes:
      - static:/app/build/static
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=PathPrefix(`/`)"

  router:
    restart: unless-stopped
    image: traefik:v2.10
    env_file: .env
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.forwardedHeaders.insecure"
    ports:
      - "80:80"
      - "8080:8080"
    depends_on:
      - api
      - front
      - static
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  postgres_data:
  caddy_data:
  public:
  static:

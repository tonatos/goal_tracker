import { ReactNode, useEffect, useRef } from 'react';
import styles from './Modal.module.css';

interface ModalProp {
    isShow: boolean,
    closeModal: () => void,
    header?: string,
    children: ReactNode,
}

export const Modal = (prop: ModalProp) => {
    const handleKeyDown = (e: any) => {
        if (e.key == 'Escape') {
            prop.closeModal();
        }
    }
    const modalRef = useRef<HTMLDivElement | null>(null);
    useEffect(() => {
        modalRef.current?.focus();
    }, [prop.isShow]);

    return prop.isShow ? (
        <div className={styles.Modal} onKeyDown={(e) => handleKeyDown(e)} tabIndex={1} ref={modalRef}>
            <div className={styles.ModalOverlay}>
                <div className={styles.ModalContainer}>
                    <div className={styles.ModalHeader}>
                        {prop.header ? <h2>{prop.header}</h2> : <></>}
                        <a
                            href="#"
                            onClick={() => prop.closeModal()}
                            className={styles.ModalClose}
                        >
                            <svg width="34px" height="34px" viewBox="0 0 34 34" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                <g id="Page-1" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                                    <g id="Desktop-HD" transform="translate(-1063.000000, -229.000000)" fill="#000000">
                                        <path d="M1079.99261,229.97127 C1075.55973,229.97127 1071.56691,231.737135 1068.63361,234.678842 C1065.74937,237.553278 1063.99191,241.548899 1063.99191,245.992993 C1063.99191,250.444094 1065.74937,254.43551 1068.63361,257.339377 C1071.56691,260.261464 1075.55973,262.02873 1079.99261,262.02873 C1084.42129,262.02873 1088.41551,260.261464 1091.34741,257.339377 C1094.23305,254.43551 1095.99191,250.444094 1095.99191,245.992993 C1095.99191,241.548899 1094.23305,237.553278 1091.34741,234.678842 C1088.41551,231.737135 1084.42129,229.97127 1079.99261,229.97127 Z M1079.99252,251.89712 C1079.7111,251.89712 1079.48134,251.75374 1079.2676,251.565832 C1079.08504,251.38683 1078.96659,251.128568 1078.96659,250.899694 L1078.96659,247.003499 L1075.10246,247.003499 C1074.84865,247.003499 1074.59039,246.897522 1074.4096,246.736331 C1074.24485,246.546642 1074.13442,246.28838 1074.13442,245.995386 C1074.13442,245.716641 1074.24485,245.456598 1074.4096,245.265128 C1074.59039,245.106608 1074.84865,244.987274 1075.10246,244.987274 L1078.96659,244.987274 L1078.96659,241.102656 C1078.96659,240.840831 1079.08504,240.611067 1079.2676,240.427612 C1079.45818,240.247719 1079.7111,240.12215 1079.99252,240.12215 C1080.27215,240.12215 1080.5322,240.247719 1080.71565,240.427612 C1080.90445,240.611067 1081.01844,240.840831 1081.01844,241.102656 L1081.01844,244.987274 L1084.87991,244.987274 C1085.13817,244.987274 1085.39465,245.106608 1085.57365,245.265128 C1085.7384,245.456598 1085.90227,245.716641 1085.90227,245.995386 C1085.90227,246.28838 1085.7384,246.546642 1085.57365,246.736331 C1085.39465,246.897522 1085.13817,247.003499 1084.87991,247.003499 L1081.01844,247.003499 L1081.01844,250.899694 C1081.01844,251.128568 1080.90445,251.38683 1080.71565,251.565832 C1080.5322,251.75374 1080.27215,251.89712 1079.99252,251.89712 Z M1070.10627,255.893306 C1067.56974,253.361886 1065.99118,249.861247 1065.99118,245.994595 C1065.99118,242.146346 1067.56974,238.635483 1070.10627,236.095884 C1072.64792,233.563442 1076.123,231.98795 1079.99272,231.98795 C1083.86652,231.98795 1087.34058,233.563442 1089.88018,236.095884 C1092.41671,238.635483 1093.99118,242.146346 1093.99118,245.994595 C1093.99118,249.861247 1092.41671,253.361886 1089.88018,255.893306 C1087.34058,258.43904 1083.86652,260.013509 1079.99272,260.013509 C1076.123,260.013509 1072.64792,258.43904 1070.10627,255.893306 Z" id="Fill-30" transform="translate(1079.991912, 246.000000) rotate(45.000000) translate(-1079.991912, -246.000000) "></path>
                                    </g>
                                </g>
                            </svg>
                        </a>
                    </div>
                    <div className={styles.ModalBody}>
                        {prop.children}
                    </div>
                </div>
            </div>
        </div>
    ) : <></>;
}